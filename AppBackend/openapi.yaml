openapi: 3.0.3
info:
  title: PhotoApp Backend API
  version: 1.0.0
  description: OpenAPI specification for PhotoApp backend (auto-generated from controller files)
servers:
  - url: http://localhost:3000,
    description: Local development server
  - url: https://backend-api.photoapp.redadviser.com,
    description: Production server
tags:
  - name: System
    description: System endpoints (health check, static files)
  - name: Authentication
    description: User authentication and registration
  - name: Photos
    description: Photo upload, management and Google Drive integration
  - name: Profile
    description: User profile management
  - name: Albums
    description: Album creation and photo organization
  - name: Categories
    description: Category management for albums
paths:
  /ping:
    get:
      tags:
        - System
      summary: Health check
      responses:
        '200':
          description: Pong
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /uploads/{file}:
    get:
      tags:
        - System
      summary: Serve static uploads (files)
      parameters:
        - name: file
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: File stream / binary
  /auth/signup:
    post:
      tags:
        - Authentication
      summary: Create a new user (email/password)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User created / response from AuthService
  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login user (email/password)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Auth tokens / user info
  /auth/google/callback:
    post:
      tags:
        - Authentication
      summary: Login with Google ID token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                idToken:
                  type: string
      responses:
        '200':
          description: Google login result
  /auth/link-google:
    post:
      tags:
        - Authentication
      summary: Link Google account to existing account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firebaseIdToken:
                  type: string
                googleIdToken:
                  type: string
      responses:
        '200':
          description: Link result
  /photos/upload:
    post:
      tags:
        - Photos
      summary: Upload multiple photos (auth required)
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                photos:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '200':
          description: Upload result with photos list
  /photos:
    get:
      tags:
        - Photos
      summary: List current user's photos (auth required)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Array of photos
  /photos/delete/{photoName}:
    post:
      tags:
        - Photos
      summary: Delete photo by name (auth required)
      security:
        - bearerAuth: []
      parameters:
        - name: photoName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Deleted
  /photos/all:
    get:
      tags:
        - Photos
      summary: List all photos (public)
      responses:
        '200':
          description: Array of photos
  /photos/delete-by-url:
    post:
      tags:
        - Photos
      summary: Delete photo by URL (auth required)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                photoUrl:
                  type: string
      responses:
        '200':
          description: Deleted
  /photos/library:
    get:
      tags:
        - Photos
      summary: List library photos grouped by year (auth required)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Grouped photos
  /photos/batch-delete:
    post:
      tags:
        - Photos
      summary: Batch delete photos by names (auth required)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                photoNames:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Batch delete result
  /photos/connect-drive:
    post:
      tags:
        - Photos
      summary: Generate Google Drive auth URL (auth required)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Google Drive auth URL generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  authUrl:
                    type: string
  /photos/drive-callback:
    post:
      tags:
        - Photos
      summary: Exchange code for tokens and save (auth required)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
      responses:
        '200':
          description: Drive connected
  /photos/drive-status:
    get:
      tags:
        - Photos
      summary: Check Google Drive connection status (auth required)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Google Drive connection status
          content:
            application/json:
              schema:
                type: object
                properties:
                  connected:
                    type: boolean
                  valid:
                    type: boolean
  /photos/disconnect-drive:
    post:
      tags:
        - Photos
      summary: Disconnect Google Drive (auth required)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Disconnected
  /profile:
    get:
      tags:
        - Profile
      summary: Get current user profile (auth required)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Profile data
    put:
      tags:
        - Profile
      summary: Update profile (auth required)
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Updated profile
  /profile/email:
    put:
      tags:
        - Profile
      summary: Update email only (auth required)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Email updated
  /profile/password:
    put:
      tags:
        - Profile
      summary: Update password only (auth required)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                currentPassword:
                  type: string
                newPassword:
                  type: string
      responses:
        '200':
          description: Password updated
  /profile/test:
    get:
      tags:
        - Profile
      summary: Profile module test endpoint
      responses:
        '200':
          description: Test info
  /albums:
    post:
      tags:
        - Albums
      summary: Create album (auth required)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                hexcolor:
                  type: string
                year:
                  type: integer
                coverimage:
                  type: string
                categoryId:
                  type: integer
      responses:
        '201':
          description: Album created
    get:
      tags:
        - Albums
      summary: Get user albums with categories (auth required)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Albums list
  /albums/simple:
    get:
      tags:
        - Albums
      summary: Get simple albums (auth required)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Albums list
  /albums/{id}:
    get:
      tags:
        - Albums
      summary: Get specific album by id (auth required)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Album
    put:
      tags:
        - Albums
      summary: Update album (auth required)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                hexcolor:
                  type: string
                year:
                  type: integer
                coverimage:
                  type: string
                categoryId:
                  type: integer
      responses:
        '200':
          description: Updated album
  /albums/{id}/delete:
    post:
      tags:
        - Albums
      summary: Delete album (auth required)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Deleted
  /albums/test/status:
    get:
      tags:
        - Albums
      summary: Albums module test endpoint
      responses:
        '200':
          description: Test info
  /albums/{id}/photos:
    post:
      tags:
        - Albums
      summary: Add photo to album (auth required)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                photoName:
                  type: string
                photoUrl:
                  type: string
      responses:
        '200':
          description: Photo added
    get:
      tags:
        - Albums
      summary: Get photos from album (auth required)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Album photos
  /albums/{id}/photos/batch:
    post:
      tags:
        - Albums
      summary: Batch add photos to album (auth required)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                photos:
                  type: array
                  items:
                    type: object
                    properties:
                      photoName:
                        type: string
                      photoUrl:
                        type: string
      responses:
        '200':
          description: Batch add result
  /albums/{id}/photos/{photoName}/remove:
    post:
      tags:
        - Albums
      summary: Remove photo from album (auth required)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: photoName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Photo removed
  /categories:
    post:
      tags:
        - Categories
      summary: Create category (auth required)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                color:
                  type: string
      responses:
        '201':
          description: Category created
    get:
      tags:
        - Categories
      summary: Get user categories (auth required)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Categories list
  /categories/{id}:
    get:
      tags:
        - Categories
      summary: Get category by id (auth required)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Category
    put:
      tags:
        - Categories
      summary: Update category (auth required)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                color:
                  type: string
      responses:
        '200':
          description: Updated category
  /categories/{id}/delete:
    post:
      tags:
        - Categories
      summary: Delete category (auth required)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Deleted
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
